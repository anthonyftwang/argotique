type User @model @auth(rules: [{allow: owner}]) @key(fields: ["id"]) {
  id: ID!
  name: String!
  email: String!
  joinedAt: AWSDateTime!
  bio: String @auth(rules: [{allow: private, operations: [read]}, {allow: public, operations: [read]}])
  posts: [Post] @connection(keyName: "postByUser", fields: ["id"])
}

type Post @model @auth(rules: [{allow: owner}, {allow: private, operations: [read]}, {allow: public, operations: [read]}]) @key(name: "postByUser", fields: ["userID"]) {
  id: ID!
  title: String!
  subtitle: String!
  content: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  lastActivityAt: AWSDateTime!
  voteCount: Int!
  userID: ID!
  user: User @connection(fields: ["userId"])
  comments: [Comment] @connection(keyName: "commentsByPost", fields: ["id"])
  votes: [PostVote] @connection(keyName: "votesByPost", fields: ["id"])
}

type Comment @model @auth(rules: [{allow: owner}, {allow: private, operations: [read]}, {allow: public, operations: [read]}]) @key(name: "commentsByPost", fields: ["postID"]) {
  id: ID!
  content: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  userID: ID!
  postID: ID!
  user: User @connection(fields: ["userID"])
  post: Post @connection(fields: ["postID"])
}

type PostVote @model @key(name: "votesByPost", fields: ["postID"]) @auth(rules: [{allow: owner}, {allow: private, operations: [read]}, {allow: public, operations: [read]}]) {
  id: ID!
  userID: ID!
  postID: ID!
  post: Post @connection(fields: ["postID"])
  createdAt: AWSDateTime!
}
  